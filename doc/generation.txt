GENERATION
===============================================================================

Obviously I do not want to generate every single map in the game at the same
time because that would take a long time, and also certain maps might not even
exist until they are created by digging or whatever.

Every map will have a location in 3D space, and when a new map is created it
will look at it's location in relation to other maps and the things that those
other maps have that are inter map related (for example up and down staircases,
waterfalls and sinkholes and stuff), and it can make a decision as to whether
it wants to include them in the map, and if it does then it will then be
a requirement that those locations are covered by this map and they have the
right stuff like stairs if needed.

Actually, rather than being an initial decision, I think I should just make it
that if the map happens to pass over an unclaimed staircase then it can choose
to claim it and put a staircase there.

I feel a little worried about things overwriting staircases and stuff like
that, but I can just code a logging error right into the tile setting function
when you overwrite a claimed staircase. If the staircase is nto claimed it does
not really matter.

There should also be cases where a staircase reserves itself for a specific
type of thing, for example if there is a level with three staircases, but one
of them is a special staircase to a treasure room or something, and the other
two are just normal staircases. In this case, the special staircase should not
be able to be claimed by anything. I will come back to this idea.

Also, levels should be generated in advance, meaning that when you enter the
first level of the game it should generate all of the levels that connect to
the first level, and when you enter those levels it generates the levels
connected to them, and it should store a flag as to whether a level has been
entered by the player yet or not. The advantage of doing this is that until
a level has been entered by the player, it can still be edited, so if two maps
are on the same height and position, we can add a staircase between them
somewhere if we want. I think we should do so with %50 likelihood on average,
but other things might change that likelihood considerably.

EXAMPLE
===============================================================================

First level is a big courtyard with four stairways up, one stairway down to
the dungeons, one stairway down to the kitchen, and one stairway down to the
vault. All of the connecting levels are then generated, so for the up
staircases, it will generate a level above which may also cover some of the
other up staircases in which case it may claim them. If two of the up floors
overlap then it may also create a passageway between them. It will choose the
style of these up levels simply based on height number and the current "biome"
type thing we are in which is castle.

For the down to gold it will know that this staircase is meant to lead to gold
so it will create a gold room.

STORAGE OF MAPS
===============================================================================

Our requirements are that we can have an overworld made of smaller maps all
fitted together, and that we can have maps that are "linked" or "nested" by
stairs a whateevr else, also two maps can occupy the same space. We also
require that when the map is being generated it has space to freely grow in
different directions.

generating a map that is at height 0 and a map that is at a greater height have
a reasonable difference in that the maps at height 0 fill a fixed size square
area which can be walked across into the next area. maps on other height levels
have arbitrary size and are completely boxed in other than with stairs and
shit.

Ok I think that what we can do is when a map is created, any walkable edges are
considered passages into a next level in that direction so when that level is
entered, the level across that edge is then generated as well.

OK so lets say we are generating the first level of the map at position
(0, 0, 0). It will use the game's default algorithm, and that algorithm will
decide that because it is at height 0, it will make itself into a fixed size
box and have floor all the way to edges all around. When other levels are
generated they will not be on height 0 so this will not occur.

Also, since levels are linked by links, levels that border one another will
have to store references to one another. This is slightly annoying, but that is
just how it is on this bitch of an earth. All levels that are connected to the
level that the player is currently in will be loaded up as well and will be
updated so that their enemies can do stuff, enemies will also be able to move
to a different level just like the player can. I am not sure whether I am going
to allow path finding to span multiple levels though as that seems rather
complicated. Ahhh fuck it, lets do it, all we need to do is everytime we hit
a doorway we jump to the exit point of the doorway and add 1 to the pathfinding
and continue as normal. We will need to be able to represent a point on a map
which is not necessarily the current map though, maybe we can have all maps
loaded into memory at the same time, but only have the actual tile data
instantiated for the current and surrounding maps, that way, we can use the
map's definitive id plus the tile coordinates to say what tile on what map
a given staircase corresponds to.

yeah so if we have all maps in a big array (but tile data not loaded for all of
them), then accessing tiles in a different map will be very fast and very easy.



